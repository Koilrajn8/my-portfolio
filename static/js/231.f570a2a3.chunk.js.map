{"version":3,"file":"static/js/231.f570a2a3.chunk.js","mappings":"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","sources":["../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-dom/dist/es/animation/utils/make-animation-instant.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/calc-child-stagger.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/motion-utils/dist/es/is-object.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs"],"sourcesContent":["/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v) {\n        if (!this.passiveEffect) {\n            this.updateAndNotify(v);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        this.parent?.addChild(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent?.removeChild(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    addChild(child) {\n        this.children.add(child);\n        this.enteringChildren ?? (this.enteringChildren = new Set());\n        this.enteringChildren.add(child);\n    }\n    removeChild(child) {\n        this.children.delete(child);\n        this.enteringChildren && this.enteringChildren.delete(child);\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n            this.scheduleRender();\n        });\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n        /**\n         * Now we've finished triggering animations for this element we\n         * can wipe the enteringChildren set for the next render.\n         */\n        visualElement.enteringChildren = undefined;\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","function makeAnimationInstant(options) {\n    options.duration = 0;\n    options.type === \"keyframes\";\n}\n\nexport { makeAnimationInstant };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, \"cubic-bezier-length\");\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, \"invalid-easing-type\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { makeAnimationInstant } from './utils/make-animation-instant.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            makeAnimationInstant(options);\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, makeAnimationInstant, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        makeAnimationInstant(options);\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        makeAnimationInstant(options);\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {\n    const index = Array.from(children)\n        .sort((a, b) => a.sortNodePosition(b))\n        .indexOf(child);\n    const numChildren = children.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    return delayIsFunction\n        ? delayChildren(index, numChildren)\n        : staggerDirection === 1\n            ? index * staggerChildren\n            : maxStaggerDuration - index * staggerChildren;\n}\n\nexport { calcChildStagger };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { calcChildStagger } from '../utils/calc-child-stagger.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    for (const child of visualElement.variantChildren) {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (typeof delayChildren === \"function\" ? 0 : delayChildren) +\n                calcChildStagger(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    }\n    return Promise.all(animations);\n}\n\nexport { animateVariant };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { calcChildStagger } from '../../animation/utils/calc-child-stagger.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => {\n                    const options = { type };\n                    /**\n                     * If we're performing the initial animation, but we're not\n                     * rendering at the same time as the variant-controlling parent,\n                     * we want to use the parent's transition to calculate the stagger.\n                     */\n                    if (typeof animation === \"string\" &&\n                        isInitialRender &&\n                        !willAnimateViaParent &&\n                        visualElement.manuallyAnimateOnMount &&\n                        visualElement.parent) {\n                        const { parent } = visualElement;\n                        const parentVariant = resolveVariant(parent, animation);\n                        if (parent.enteringChildren && parentVariant) {\n                            const { delayChildren } = parentVariant.transition || {};\n                            options.delay = calcChildStagger(parent.enteringChildren, visualElement, delayChildren);\n                        }\n                    }\n                    return {\n                        animation: animation,\n                        options,\n                    };\n                }));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n *\n * Difficult to capture in a test but to prevent flickering\n * we must set this to true either on update or unmount.\n * Running `next-env/layout-id` in Safari will show this behaviour if broken.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        hasTakenAnySnapshot = true;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n"],"names":["transformPropOrder","transformProps","Set","radToDeg","rad","Math","PI","rotate","v","angle","atan2","rebaseAngle","matrix2dParsers","x","y","translateX","translateY","scaleX","scaleY","scale","abs","rotateZ","skewX","atan","skewY","skew","sqrt","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","transform","matrix3dMatch","match","parsers","matrix2dMatch","valueParser","values","split","map","convertTransformToNumber","value","parseFloat","trim","checkStringStartsWith","token","key","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","convertBoundingBoxToBox","top","left","right","bottom","min","max","mixNumber","from","to","progress","isIdentityScale","undefined","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","originX","originY","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","positionalKeys","clamp","number","parse","alpha","default","createUnitType","unit","endsWith","length","degrees","percent","px","vh","vw","progressPercentage","testValueType","type","dimensionValueTypes","findDimensionValueType","find","isNumericalString","splitCSSVariableRegex","parseCSSVariable","current","exec","token1","token2","fallback","getVariableValue","element","depth","resolved","window","getComputedStyle","getPropertyValue","trimmed","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","filter","has","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","_bbox","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","forEach","frameloop","push","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","wake","keepAlive","immediate","i","frame","cancelFrame","frameSteps","requestAnimationFrame","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","Array","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","Map","removedTransforms","visualElement","getValue","get","set","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","motionValue","isAsync","this","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","keyframes","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","isZeroValueString","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","isNaN","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","int","transformValueTypes","scaleZ","perspective","transformPerspective","opacity","originZ","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isMotionValue","getVelocity","clearTime","time","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","subscriptions","handler","notify","numSubscriptions","getSize","velocityPerSecond","velocity","frameDuration","collectMotionValues","MotionValue","init","options","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","hasAnimated","owner","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","endAnimation","addDependent","removeDependent","getPrevious","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","valueTypes","microtask","cancelMicrotask","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","props","some","createBox","isBrowser","prefersReducedMotion","hasReducedMotionListener","visualElementStore","WeakMap","isAnimationControls","isVariantLabel","isArray","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","variants","getValueState","resolveVariantFromProps","definition","custom","propEventHandlers","DOMVisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","parent","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","children","shouldReduceMotion","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","latestValues","triggerBuild","renderInstance","renderState","style","projection","renderScheduledAt","scheduleRender","baseTarget","initialValues","initial","variantChildren","manuallyAnimateOnMount","willChange","initialMotionValues","mount","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addEventListener","initPrefersReducedMotion","addChild","unmount","remove","removeChild","feature","isMounted","child","enteringChildren","valueIsTransform","onBindTransform","removeOnChange","latestValue","onUpdate","isTransformDirty","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","updateFeatures","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevProps","prevPresenceContext","listener","next","nextValue","prevValue","addValue","hasValue","existingValue","liveStyle","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getProps","getVariant","getDefaultTransition","transition","getTransformPagePoint","transformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","variant","args","scheduleRenderMicrotask","arguments","compareDocumentPosition","vars","childSubscription","latest","textContent","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","transformOrigin","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","renderHTML","styleProp","elementStyle","applyProjectionStyles","setProperty","scaleCorrectors","isForcedMotionValue","layoutId","newValues","HTMLVisualElement","isProjecting","readTransformValue","computedStyle","camelToDash","str","toLowerCase","dashKeys","offset","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","spacing","useDashCase","keys","buildSVGPath","camelCaseAttributes","tag","scrapeMotionValuesFromProps$1","charAt","toUpperCase","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","tagName","lowercaseSVGElements","isSVGComponent","Component","createDomVisualElement","allowProjection","Fragment","LayoutGroupContext","createContext","LazyContext","strict","MotionConfigContext","p","isStatic","reducedMotion","MotionContext","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","filterProps","isDom","forwardMotionProps","filteredProps","useRender","ref","useVisualProps","elementProps","renderedChildren","createElement","PresenceContext","resolveMotionValue","makeLatestValues","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","makeUseVisualState","config","make","createRenderState","makeState","useRef","useConstant","useHTMLVisualState","useSVGVisualState","loadFeatures","motionComponentSymbol","Symbol","for","isRefObject","useMotionRef","externalRef","useCallback","onMount","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","visualElementRef","renderer","initialLayoutGroupConfig","initialPromotionConfig","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","animationState","animateChanges","MotionHandoffMarkAsComplete","createMotionComponent","preloadedFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","getProjectionFunctionality","ProjectionNode","jsxs","Provider","jsx","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","id","combined","createMotionProxy","Proxy","componentCache","factory","_target","resolveVariant","getValueTransition","isKeyframesTarget","setMotionValue","setTarget","addValueToWillChange","WillChange","newWillChange","getOptimisedAppearId","makeAnimationInstant","duration","combineFunctions","pipe","transformers","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","mainThread","waapi","hueToRgb","q","t","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","result","approximateRoot","durationKeys","physicsKeys","isSpringType","getSpringOptions","springOptions","isResolvedFromDuration","root","derived","spring","optionsOrVisualDuration","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","createMixers","customMixer","mixers","mixerFactory","numMixers","easingFunction","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","input","isClamp","inputLength","isZeroDeltaRange","reverse","interpolator","progressInRange","interpolate","isNotNull","getFinalKeyframe","repeat","repeatType","speed","resolvedKeyframes","useFirstKeyframe","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","startTime","isStopped","holdTime","playbackSpeed","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","isGenerator","NativeAnimation","finishedTime","pseudoElement","isPseudoElement","applyGeneratorOptions","valueName","keyframeOptions","iterations","direction","finally","startWaapiAnimation","onfinish","updateMotionValue","isCSSVar","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","HTMLElement","supportsBrowserAnimation","catch","pendingTimeline","_onReject","underDampedSpring","keyframesTransition","valueKey","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","animateMotionValue","valueTransition","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","MotionHandoffAnimation","appearId","all","calcChildStagger","sort","numChildren","size","maxStaggerDuration","delayIsFunction","animateVariant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","willAnimateViaParent","parentVariant","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pageX","pageY","addPointerEvent","addPointerInfo","SCALE_MIN","SCALE_MAX","calcLength","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","latestPointerEvent","latestPanInfo","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","finalEvent","finalPanInfo","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","isObject","isSVGElement","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","animationCommitId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","targetStyle","visibility","pointerEvents","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isHTMLElement","isNodeOrChild","parentElement","focusableElements","isElementKeyboardAccessible","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","enableKeyboardPress","focusEvent","eventOptions","currentTarget","handleKeydown","handleKeyup","isValidPressEvent","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","targetOrSelector","onPressStart","targets","cancelEvents","startPress","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","hasAttribute","press","_element","globalTapTarget","onFocus","isFocusVisible","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","motion"],"sourceRoot":""}